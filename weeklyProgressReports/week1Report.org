#+TITLE: ECE 4760 Laser Projector Progress Report Week 1
#+AUTHOR: Peter Friend (pcf38), Istvan Burbank (ipb7), James Cassell (jcc384)
#+OPTIONS: toc:nil

This past week, a large portion of the work focused on creating the physical projector.

Istvan led design on a part meant for the mirrors to be attached to and to be attached to the CPU fan.
This part was designed in CAD and sent to the cornell RPL for 3D printing (which is at no cost to the project).
Istvan also established the public interface of the projector to the game (a framebuffer is exposed which is a 2-d array of ~pixel_t~ bitfields, which in turn have 2-bit red green and blue fields).
Istvan also investigated the feasiblity of incorporating a VGA interface, allowing projection from a laptop.
The investigation involved the design and routing of a PCB with the required components, but during that process it was determined that the inherent complexity and number of parts was outside the scope of this project.

James focused calculations were done to determine what the size our screen will be at different distances from the display.
Along with at what angles can we position the rotating mirror in order to still hit the mirror array based on position relative to the mirror array.
Other considerations were given into how the laser interacts with the spinning mirror, and how large of a horizontal arc this may give us.
It was determined that at the small distances from which you can still see the lazer, the arc will be minimal and hard to notice.

After we realized that the memory needed to buffer all of the pixels would be a serious concern, we focused on the space efficiency of our framebuffer.
Peter researched standards compliant bitfields and how to "pack" them into structs and arrays to maximize space efficiency without relying on non-standard compiler features such as pragmas.
Finally, Peter planned out pin and peripheral use so that writing a single byte into a port output SFR can output at least six pins.
This is interesting under the constraints of leaving free SPI pins and the weird mapping of physical pins to IO Ports.
Obviously, this is so that the DMA can write a single byte for each pixel (two bits per color).

Overall, we worked together on figuring out what types of hardware we are going to use in order to disaply 240p.
This included reading datasheets for many different DACs as well as external memory for storing a frame buffer.

Below are tables that we created detailing these pin and peripheral assignments.
* Peripheral Use
| Peripheral | file used in | purpose           |
|------------+--------------+-------------------|
| AD1        |              | Joystick movement |
|------------+--------------+-------------------|
| Timer3     |              | AD1 timing        |
|------------+--------------+-------------------|
| SPI1       |              | ???               |
|------------+--------------+-------------------|
* Pinout
| Direction | Peripheral | Signal       | Symbolic Pin | Pin |
|-----------+------------+--------------+--------------+-----|
| in        | AD1        |              | AN0          |   2 |
| in        | AD1        |              | AN1          |   3 |
|-----------+------------+--------------+--------------+-----|
| out       | (gpio)     |              | RB0          |   4 |
| out       | (gpio)     |              | RB1          |   5 |
| out       | (gpio)     |              | RB2          |   6 |
| out       | (gpio)     |              | RB3          |   7 |
| out       | (gpio)     |              | RB4          |  11 |
| out       | (gpio)     |              | RB5          |  14 |
| out       | (gpio)     |              | RB7          |  16 |
|-----------+------------+--------------+--------------+-----|
| out       | SPI1       | Slave Select | RPB15        |  26 |
| out       | SPI1       | Data Out     | RPB8         |  17 |
| in        | SPI1       | Data In      | RPB11        |  22 |
| out       | SPI1       |              | SCK1         |  25 |
|-----------+------------+--------------+--------------+-----|
|           |            |              |              |     |

